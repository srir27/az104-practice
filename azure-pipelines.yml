# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: backendconfigs

stages:
  - stage: PlanStage
    jobs:
      - job: TerraformInstall
        displayName: Installing terraform in the agent
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendAzureRmUseEntraIdForAuthentication: false
              backendServiceArm: 'az104-practice'
              backendAzureRmResourceGroupName: $(resource_group)
              backendAzureRmStorageAccountName: $(storage_account)
              backendAzureRmContainerName: $(container)
              backendAzureRmKey: $(key)
              backendAzureRmUseCliFlagsForAuthentication: false
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out=$(System.DefaultWorkingDirectory)/planfolder/tfplan'
              environmentServiceNameAzureRM: 'az104-practice'
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: 'terraform'
              commandOptions: '-out=tfplan'
              environmentServiceNameAzureRM: 'az104-practice'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'terraform/tfplan' #Publishing only the tfplan binary file
              artifact: 'tfplan'
              publishLocation: 'pipeline'
          
