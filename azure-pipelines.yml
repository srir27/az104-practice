trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: backendconfigs

stages:
##########################################
###         STAGE 1: PLAN             ###
##########################################
  - stage: PlanStage
    jobs:
      - job: TerraformPlan
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: '1.12.0'
          
          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendServiceArm: 'az104-practice'
              backendAzureRmResourceGroupName: $(resource_group)
              backendAzureRmStorageAccountName: $(storage_account)
              backendAzureRmContainerName: $(container)
              backendAzureRmKey: $(key)
          
          - task: TerraformTaskV4@4
            displayName: Terraform Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              commandOptions: '-out=tfplan'
              environmentServiceNameAzureRM: 'az104-practice'

          # Publishing the entire working directory including tfplan file
          - task: PublishPipelineArtifact@1
            displayName: Publish Terraform Plan
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)'
              artifactName: 'terraform-plan'

##########################################
###         STAGE 2: APPLY             ###
##########################################
  - stage: ApplyStage
    dependsOn: PlanStage
    condition: succeeded()
    jobs:
      - deployment: TerraformApply
        displayName: Apply Terraform Plan
        environment: approval-env # Environment that is created in UI
        strategy:
          runOnce:
            deploy:
              steps:
                - task: TerraformInstaller@1
                  displayName: Install Terraform
                  inputs:
                    terraformVersion: '1.12.0'
                
                # Download the published artifacts
                - task: DownloadPipelineArtifact@2
                  displayName: Download Terraform Plan
                  inputs:
                    artifactName: 'terraform-plan'
                    targetPath: '$(Pipeline.Workspace)/terraform-plan'
                
                # Re-initialize Terraform in the new agent
                - task: TerraformTaskV4@4
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: '$(Pipeline.Workspace)/terraform-plan'
                    backendServiceArm: 'az104-practice'
                    backendAzureRmResourceGroupName: $(resource_group)
                    backendAzureRmStorageAccountName: $(storage_account)
                    backendAzureRmContainerName: $(container)
                    backendAzureRmKey: $(key)
                
                - task: TerraformTaskV4@4
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: '$(Pipeline.Workspace)/terraform-plan'
                    commandOptions: 'tfplan'
                    environmentServiceNameAzureRM: 'az104-practice'
                    backendServiceArm: 'az104-practice'

